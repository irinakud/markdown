{"version":3,"sources":["Preview.js","Editor.js","App.js","unmarked.js","reportWebVitals.js","index.js"],"names":["Preview","props","marked","setOptions","breaks","innerHTML","value","class","readonly","id","dangerouslySetInnerHTML","__html","Editor","onChange","type","App","state","input","event","this","setState","target","href","handleChange","bind","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAceA,EAZC,SAAAC,GACZC,IAAOC,WAAW,CAACC,QAAQ,IAC3B,IAAMC,EAAYH,IAAOD,EAAMK,OAC/B,OACE,sBAAKC,MAAM,YAAX,UACE,qBAAKA,MAAM,QAAX,uBACA,qBACAC,UAAQ,EACRC,GAAG,UACHC,wBAAyB,CAACC,OAAQN,SCE3BO,EAbA,SAAAX,GACX,OACE,sBAAKM,MAAM,YAAX,UACE,qBAAKA,MAAM,QAAX,oBACA,0BACAE,GAAG,SACHI,SAAUZ,EAAMY,SAChBC,KAAK,OACLR,MAAOL,EAAMK,YCqBNS,E,kDAtBd,WAAYd,GAAQ,IAAD,8BAChB,cAAMA,IACDe,MAAQ,CAACC,MCTG,wRDOD,E,gDAKnB,SAAaC,GACVC,KAAKC,SAAS,CAACH,MAAOC,EAAMG,OAAOf,U,oBAGtC,WACC,OACI,gCACE,0EAA4C,mBAAGgB,KAAK,qCAAR,gDAA5C,OACA,sBAAKf,MAAM,iBAAX,UACE,cAAC,EAAD,CAAQM,SAAUM,KAAKI,aAAaC,KAAKL,MAAOb,MAAOa,KAAKH,MAAMC,QAClE,cAAC,EAAD,CAASX,MAAOa,KAAKH,MAAMC,kB,GAhBnBQ,IAAMC,WEMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.64f5ceef.chunk.js","sourcesContent":["import marked from 'marked'\r\n\r\nconst Preview = props => {\r\n    marked.setOptions({breaks: true});\r\n    const innerHTML = marked(props.value);\r\n    return (\r\n      <div class=\"grid-item\">\r\n        <div class=\"title\">Previewer</div>\r\n        <div \r\n        readonly\r\n        id='preview'\r\n        dangerouslySetInnerHTML={{__html: innerHTML}}></div></div>\r\n    );\r\n  };\r\nexport default Preview;","const Editor = props => {\r\n    return (\r\n      <div class=\"grid-item\">\r\n        <div class=\"title\">Editor</div>\r\n        <textarea\r\n        id='editor'\r\n        onChange={props.onChange}\r\n        type='text'\r\n        value={props.value}\r\n      /></div>\r\n    );\r\n  };\r\n\r\nexport default Editor;","import './App.css';\nimport {unmarked} from './unmarked.js';\nimport Preview from './Preview.js'\nimport Editor from './Editor.js'\nimport React from \"react\"\n\nclass App extends React.Component {\n\tconstructor(props)\t{\n    super(props);\n    this.state = {input: unmarked};\n\t}\n\n\thandleChange(event)\t{\n    this.setState({input: event.target.value});\n\t}\n\n\trender() {\n\t\treturn (\n      <div>\n        <h2>This demo uses the markdown parser from <a href=\"https://cdnjs.com/libraries/marked\">https://cdnjs.com/libraries/marked</a>.</h2>\n        <div class=\"grid-container\">\n          <Editor onChange={this.handleChange.bind(this)} value={this.state.input}/>\n          <Preview value={this.state.input}/>\n        </div>\n      </div>\n    );\n\t}\n}\n\nexport default App;\n","export const unmarked = `# H1 heading \r\n## H2 heading \r\n[This is a link](https://www.google.com) to google.\r\n\r\n\\`<div>Inline code</div>\\` \r\n\r\n\\`\\`\\`\r\n<div>   \r\n  <p>Code block</p>\r\n</div>\r\n\\`\\`\\`\r\n\r\n1. List item 1 \r\n2. List item 2 \r\n3. List item 3\r\n\r\n> A Block quote\r\n\r\n**Bold text**\r\n\r\n![Image](img/icon.jpg)`;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}